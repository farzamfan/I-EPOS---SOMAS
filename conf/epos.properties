### Dataset ###
#The folder name in the datasets path. Make sure it has no spaces, tabs or newlines (alphanum and underscore preferred)
dataset=mensa


### Basic epos properties ###
# any integer > 0
numSimulations=1

# any integer > 0
numIterations=40

# any integer > 0
numAgents=926

# any integer > 0
numPlans=192

# any integer > 0
numChildren=2

# exact dimensionality from the dataset
planDim=288


### Shuffle seeds ###

# initial agent structure before reorganization occurs, any integer > 0
shuffle=0

# path to a file containing permutation of indices, need its strucure: sphinx one column: integer index in each row
shuffle_file="permutation.csv" 

### Weights of the global complex cost ###
numberOfWeights = 5
weightsString = "0.0,0.0,1,0.1,0.1"
# number of weights used in EPOS cost function
# weights are in string format, separated by ","

# weight1: in multiobjective EPOS, this is alpha (in this example 0.2)
# double from [0, 1], alpha + beta <= 1, unfairness
# weight2 in in multiobjective EPOS, this is beta (in this example 0.0)
# double from [0, 1], alpha + beta <= 1, local objective
# weight3 is the meal price weight
# double from [0, 1], w_m
# weight4 is the meal preference weight
# double from [0, 1], w_p
# weight5 is the queuing time weight
# double from [0, 1], w_t
# a*unfairness + b*local_cost + (1-a-b)*global_costs
# L = w_m*(pr_i - I_i*pr_i) - w_p(1/pref_i) + w_i*queue_i


### Reorganization strategy ###

# possible values: periodically, convergence, globalCostReduction, never. never_strategy: never does reorganization
strategy=never

# any integer > 0, if "periodically" strategy is chosen
periodically.reorganizationPeriod=3

# any positive integer (>0), if "convergence" strategy is chosen, the iteration at which the selections will be memorized to be sued after the following reorganization
convergence.memorizationOffset=5

# double from [0, 1]
globalCost.reductionThreshold=0.5

# any integer. Keep the same seed to reproduce experiment results, what random permutations each strategy will explore, result reproducability
strategy.reorganizationSeed=0



#sphinx
goalSignalPath=default
#vector target for global response same dimensionality as planGenerator
#filepath
globalCostFunction=RSS
# "VAR", "RSS", "RMSE", goal signal is ignored in funcitons with only global response as input, e.g. var
scaling="MIN-MAX"
# "STD", "UNIT-LENGTH", only for rss, 
localCostFunction="DISC"  
# "COST", "PREF", # cost changes to discomfort


### Loggers ###
logger.GlobalCostLogger = true
logger.LocalCostMultiObjectiveLogger = true
logger.TerminationLogger = true
logger.SelectedPlanLogger = true
logger.GlobalResponseVectorLogger = true
logger.PlanFrequencyLogger = true
logger.UnfairnessLogger = true
logger.GlobalComplexCostLogger = true
logger.WeightsLogger = true
logger.ReorganizationLogger = true
logger.VisualizerLogger = true

#Code related logger for debugging and checks
# please check here https://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html. For experiments "SEVERE" is preferred 
logLevel="SEVERE"
